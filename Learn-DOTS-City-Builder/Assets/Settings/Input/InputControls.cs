//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.8.2
//     from Assets/Settings/Input/InputControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine;

public partial class @InputControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputControls"",
    ""maps"": [
        {
            ""name"": ""CameraMap"",
            ""id"": ""869dc5cf-6cba-481b-9d35-99759a9849ba"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""59f86c27-d303-4d2f-9bac-2a6fe9e6d2ef"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""EditMode"",
                    ""type"": ""Button"",
                    ""id"": ""f318b52f-3212-4d56-a52f-e7dbe6e41531"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OrbitalView"",
                    ""type"": ""Value"",
                    ""id"": ""8be2d454-27bd-47e0-95cb-086c4e3c1456"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""64498f94-dda1-44e1-aa91-dd198caac170"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""6ed08afe-0e58-455c-981c-1c272a244ce1"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""ZQSD"",
                    ""id"": ""440f4e33-798e-4a9e-853e-706f8bbb277c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6a8e6bc2-2b9b-480b-9653-3826f3dbc3be"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4919a2c9-932a-4da3-bcd8-9f5bbce2adfa"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""61428c77-1e49-4956-8ebb-03d4b856042b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2bfe0295-41f9-4d9d-8375-6dfe2dbdb759"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow"",
                    ""id"": ""556dea58-1210-4298-bf90-8bfcb599738c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f8ef1ccd-2e96-4b9e-a58b-4c8678763596"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""bbf74b37-784b-4f73-a8dd-7abffa46221a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7cf243f6-90e3-49fc-9247-1cc40c0189ba"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3c03dad3-b537-4085-b4a3-fb43afe13e99"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3934042f-550a-42d7-a90b-fb6073927ff1"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EditMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""MiddleMouse"",
                    ""id"": ""a5bf3aab-019d-4ceb-a329-924efbfd8608"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbitalView"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""41817826-bf2c-49b1-8fc7-130b982f84af"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbitalView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""592cd282-8d73-4e27-a3c9-3cdf3ee21a6b"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbitalView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9c92ec9a-6558-4507-9f27-0e84202f2376"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7587e07c-e3b2-4f36-8ff2-ae039fcbc508"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""BuildingMode"",
            ""id"": ""5a6309e6-3a91-4ff9-a052-4fd520208224"",
            ""actions"": [
                {
                    ""name"": ""CreateRoad"",
                    ""type"": ""Button"",
                    ""id"": ""a10d8874-9f2d-4e23-8e7e-a9101bc87f32"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CreateHouse"",
                    ""type"": ""Button"",
                    ""id"": ""75b5745e-e79e-44a7-9e3e-74a4d5d037b4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CreateJob"",
                    ""type"": ""Button"",
                    ""id"": ""6cc3ef3b-d897-45b7-9e95-cc21f5773216"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DeleteBuilding"",
                    ""type"": ""Button"",
                    ""id"": ""19891e03-1f54-4e73-9885-86341ba21c37"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ViewMode"",
                    ""type"": ""Button"",
                    ""id"": ""c403bdac-5a62-468e-aa93-f3554d774559"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""17575d7a-3bd8-4f1d-b48a-65f6e0e8ffeb"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CreateRoad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3e54be5-82a9-48cf-8272-7782f336dfd0"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CreateHouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b7ac136-00c2-4e0d-9d8d-ee337ca02010"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CreateJob"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8bad46b-0181-4074-bfb6-aba6c8b77c43"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DeleteBuilding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a18abb9-2682-456c-8533-83bd6edfa370"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ViewMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CameraMap
        m_CameraMap = asset.FindActionMap("CameraMap", throwIfNotFound: true);
        m_CameraMap_Movement = m_CameraMap.FindAction("Movement", throwIfNotFound: true);
        m_CameraMap_EditMode = m_CameraMap.FindAction("EditMode", throwIfNotFound: true);
        m_CameraMap_OrbitalView = m_CameraMap.FindAction("OrbitalView", throwIfNotFound: true);
        m_CameraMap_Click = m_CameraMap.FindAction("Click", throwIfNotFound: true);
        m_CameraMap_Zoom = m_CameraMap.FindAction("Zoom", throwIfNotFound: true);
        // BuildingMode
        m_BuildingMode = asset.FindActionMap("BuildingMode", throwIfNotFound: true);
        m_BuildingMode_CreateRoad = m_BuildingMode.FindAction("CreateRoad", throwIfNotFound: true);
        m_BuildingMode_CreateHouse = m_BuildingMode.FindAction("CreateHouse", throwIfNotFound: true);
        m_BuildingMode_CreateJob = m_BuildingMode.FindAction("CreateJob", throwIfNotFound: true);
        m_BuildingMode_DeleteBuilding = m_BuildingMode.FindAction("DeleteBuilding", throwIfNotFound: true);
        m_BuildingMode_ViewMode = m_BuildingMode.FindAction("ViewMode", throwIfNotFound: true);
    }

    ~@InputControls()
    {
        Debug.Assert(!m_CameraMap.enabled, "This will cause a leak and performance issues, InputControls.CameraMap.Disable() has not been called.");
        Debug.Assert(!m_BuildingMode.enabled, "This will cause a leak and performance issues, InputControls.BuildingMode.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CameraMap
    private readonly InputActionMap m_CameraMap;
    private List<ICameraMapActions> m_CameraMapActionsCallbackInterfaces = new List<ICameraMapActions>();
    private readonly InputAction m_CameraMap_Movement;
    private readonly InputAction m_CameraMap_EditMode;
    private readonly InputAction m_CameraMap_OrbitalView;
    private readonly InputAction m_CameraMap_Click;
    private readonly InputAction m_CameraMap_Zoom;
    public struct CameraMapActions
    {
        private @InputControls m_Wrapper;
        public CameraMapActions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_CameraMap_Movement;
        public InputAction @EditMode => m_Wrapper.m_CameraMap_EditMode;
        public InputAction @OrbitalView => m_Wrapper.m_CameraMap_OrbitalView;
        public InputAction @Click => m_Wrapper.m_CameraMap_Click;
        public InputAction @Zoom => m_Wrapper.m_CameraMap_Zoom;
        public InputActionMap Get() { return m_Wrapper.m_CameraMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraMapActions set) { return set.Get(); }
        public void AddCallbacks(ICameraMapActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraMapActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @EditMode.started += instance.OnEditMode;
            @EditMode.performed += instance.OnEditMode;
            @EditMode.canceled += instance.OnEditMode;
            @OrbitalView.started += instance.OnOrbitalView;
            @OrbitalView.performed += instance.OnOrbitalView;
            @OrbitalView.canceled += instance.OnOrbitalView;
            @Click.started += instance.OnClick;
            @Click.performed += instance.OnClick;
            @Click.canceled += instance.OnClick;
            @Zoom.started += instance.OnZoom;
            @Zoom.performed += instance.OnZoom;
            @Zoom.canceled += instance.OnZoom;
        }

        private void UnregisterCallbacks(ICameraMapActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @EditMode.started -= instance.OnEditMode;
            @EditMode.performed -= instance.OnEditMode;
            @EditMode.canceled -= instance.OnEditMode;
            @OrbitalView.started -= instance.OnOrbitalView;
            @OrbitalView.performed -= instance.OnOrbitalView;
            @OrbitalView.canceled -= instance.OnOrbitalView;
            @Click.started -= instance.OnClick;
            @Click.performed -= instance.OnClick;
            @Click.canceled -= instance.OnClick;
            @Zoom.started -= instance.OnZoom;
            @Zoom.performed -= instance.OnZoom;
            @Zoom.canceled -= instance.OnZoom;
        }

        public void RemoveCallbacks(ICameraMapActions instance)
        {
            if (m_Wrapper.m_CameraMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraMapActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraMapActions @CameraMap => new CameraMapActions(this);

    // BuildingMode
    private readonly InputActionMap m_BuildingMode;
    private List<IBuildingModeActions> m_BuildingModeActionsCallbackInterfaces = new List<IBuildingModeActions>();
    private readonly InputAction m_BuildingMode_CreateRoad;
    private readonly InputAction m_BuildingMode_CreateHouse;
    private readonly InputAction m_BuildingMode_CreateJob;
    private readonly InputAction m_BuildingMode_DeleteBuilding;
    private readonly InputAction m_BuildingMode_ViewMode;
    public struct BuildingModeActions
    {
        private @InputControls m_Wrapper;
        public BuildingModeActions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CreateRoad => m_Wrapper.m_BuildingMode_CreateRoad;
        public InputAction @CreateHouse => m_Wrapper.m_BuildingMode_CreateHouse;
        public InputAction @CreateJob => m_Wrapper.m_BuildingMode_CreateJob;
        public InputAction @DeleteBuilding => m_Wrapper.m_BuildingMode_DeleteBuilding;
        public InputAction @ViewMode => m_Wrapper.m_BuildingMode_ViewMode;
        public InputActionMap Get() { return m_Wrapper.m_BuildingMode; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BuildingModeActions set) { return set.Get(); }
        public void AddCallbacks(IBuildingModeActions instance)
        {
            if (instance == null || m_Wrapper.m_BuildingModeActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_BuildingModeActionsCallbackInterfaces.Add(instance);
            @CreateRoad.started += instance.OnCreateRoad;
            @CreateRoad.performed += instance.OnCreateRoad;
            @CreateRoad.canceled += instance.OnCreateRoad;
            @CreateHouse.started += instance.OnCreateHouse;
            @CreateHouse.performed += instance.OnCreateHouse;
            @CreateHouse.canceled += instance.OnCreateHouse;
            @CreateJob.started += instance.OnCreateJob;
            @CreateJob.performed += instance.OnCreateJob;
            @CreateJob.canceled += instance.OnCreateJob;
            @DeleteBuilding.started += instance.OnDeleteBuilding;
            @DeleteBuilding.performed += instance.OnDeleteBuilding;
            @DeleteBuilding.canceled += instance.OnDeleteBuilding;
            @ViewMode.started += instance.OnViewMode;
            @ViewMode.performed += instance.OnViewMode;
            @ViewMode.canceled += instance.OnViewMode;
        }

        private void UnregisterCallbacks(IBuildingModeActions instance)
        {
            @CreateRoad.started -= instance.OnCreateRoad;
            @CreateRoad.performed -= instance.OnCreateRoad;
            @CreateRoad.canceled -= instance.OnCreateRoad;
            @CreateHouse.started -= instance.OnCreateHouse;
            @CreateHouse.performed -= instance.OnCreateHouse;
            @CreateHouse.canceled -= instance.OnCreateHouse;
            @CreateJob.started -= instance.OnCreateJob;
            @CreateJob.performed -= instance.OnCreateJob;
            @CreateJob.canceled -= instance.OnCreateJob;
            @DeleteBuilding.started -= instance.OnDeleteBuilding;
            @DeleteBuilding.performed -= instance.OnDeleteBuilding;
            @DeleteBuilding.canceled -= instance.OnDeleteBuilding;
            @ViewMode.started -= instance.OnViewMode;
            @ViewMode.performed -= instance.OnViewMode;
            @ViewMode.canceled -= instance.OnViewMode;
        }

        public void RemoveCallbacks(IBuildingModeActions instance)
        {
            if (m_Wrapper.m_BuildingModeActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IBuildingModeActions instance)
        {
            foreach (var item in m_Wrapper.m_BuildingModeActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_BuildingModeActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public BuildingModeActions @BuildingMode => new BuildingModeActions(this);
    public interface ICameraMapActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnEditMode(InputAction.CallbackContext context);
        void OnOrbitalView(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
    }
    public interface IBuildingModeActions
    {
        void OnCreateRoad(InputAction.CallbackContext context);
        void OnCreateHouse(InputAction.CallbackContext context);
        void OnCreateJob(InputAction.CallbackContext context);
        void OnDeleteBuilding(InputAction.CallbackContext context);
        void OnViewMode(InputAction.CallbackContext context);
    }
}
